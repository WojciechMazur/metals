"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5264],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),p=u(n),b=l,m=p["".concat(s,".").concat(b)]||p[b]||d[b]||i;return n?o.createElement(m,a(a({ref:t},c),{},{components:n})):o.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,a=new Array(i);a[0]=b;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[p]="string"==typeof e?e:l,a[1]=r;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}b.displayName="MDXCreateElement"},1791:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>u,toc:()=>c});var o=n(7462),l=n(3366),i=(n(7294),n(3905)),a=["components"],r={id:"sbt",title:"sbt"},s=void 0,u={unversionedId:"build-tools/sbt",id:"build-tools/sbt",title:"sbt",description:"sbt is most commonly used build tool in the Scala community and works with",source:"@site/target/docs/build-tools/sbt.md",sourceDirName:"build-tools",slug:"/build-tools/sbt",permalink:"/metals/docs/build-tools/sbt",editUrl:"https://github.com/scalameta/metals/edit/main/docs/build-tools/sbt.md",tags:[],version:"current",frontMatter:{id:"sbt",title:"sbt"},sidebar:"docs",previous:{title:"Mill",permalink:"/metals/docs/build-tools/mill"},next:{title:"Project Goals",permalink:"/metals/docs/contributors/project-goals"}},c=[{value:"Automatic installation",id:"automatic-installation",children:[],level:2},{value:"Manual installation",id:"manual-installation",children:[],level:2},{value:"sbt Build Server",id:"sbt-build-server",children:[{value:"Generating a <code>.bsp/sbt.json</code> file if one doesn&#39;t exist",id:"generating-a-bspsbtjson-file-if-one-doesnt-exist",children:[],level:3},{value:"Connect to sbt build server",id:"connect-to-sbt-build-server",children:[],level:3},{value:"Switching back to Bloop",id:"switching-back-to-bloop",children:[],level:3}],level:2},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"Waiting for lock on .ivy2/.sbt.ivy.lock",id:"waiting-for-lock-on-ivy2sbtivylock",children:[],level:3},{value:"Not valid key: metalsEnable",id:"not-valid-key-metalsenable",children:[],level:3}],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,l.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"sbt is most commonly used build tool in the Scala community and works with\nMetals out-of-the-box."),(0,i.kt)("h2",{id:"automatic-installation"},"Automatic installation"),(0,i.kt)("p",null,'The first time you open Metals in a new sbt workspace you will be\nprompted to import the build. Select "Import Build" to start the\nautomatic installation. This will create all the needed Bloop config\nfiles. You should then be able to edit and compile your code utilizing\nall of the features.'),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/t5RJ3q6.png",alt:"Import build"})),(0,i.kt)("p",null,"The Automatic build import process for sbt happens through\n",(0,i.kt)("a",{parentName:"p",href:"https://scalacenter.github.io/bloop/"},"Bloop"),", a build server for Scala. Bloop\nimplements the ",(0,i.kt)("a",{parentName:"p",href:"https://build-server-protocol.github.io/docs/specification"},"Build Server Protocol\n(BSP)")," that Metals\nuses to learn the directory structure of your project, its library dependencies,\nand to build or run your code. "),(0,i.kt)("h2",{id:"manual-installation"},"Manual installation"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"It's recommended to use automatic installation over manual installation since\nmanual installation requires several independent steps that make it harder to\nstay up-to-date with the latest Metals version.")),(0,i.kt)("p",null,"Instead of using automatic build import, you can manually install sbt-bloop and\ngenerate the Bloop JSON files directly from your sbt shell. This approach may\nspeed up build import by avoiding Metals from starting sbt in a separate\nprocess."),(0,i.kt)("p",null,"First, install the Bloop plugin globally or inside your ",(0,i.kt)("inlineCode",{parentName:"p"},"project")," directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'// One of:\n//   ~/.sbt/0.13/plugins/plugins.sbt\n//   ~/.sbt/1.0/plugins/plugins.sbt\nresolvers += Resolver.sonatypeRepo("snapshots")\naddSbtPlugin("ch.epfl.scala" % "sbt-bloop" % "1.5.4-78-d8126ad2")\n')),(0,i.kt)("p",null,"Next, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sbt -Dbloop.export-jar-classifiers=sources bloopInstall\n")),(0,i.kt)("p",null,"to generate the Bloop JSON configuration files. You can also set the\n",(0,i.kt)("inlineCode",{parentName:"p"},"bloopExportJarClassifiers")," setting inside your main build.sbt file, but using\nthe above command will do it automatically for you in the current sbt session."),(0,i.kt)("p",null,"Finally, once ",(0,i.kt)("inlineCode",{parentName:"p"},"bloopInstall"),' is finished, execute the "Connect to build server"\ncommand (id: ',(0,i.kt)("inlineCode",{parentName:"p"},"build.connect"),") command to tell Metals to establish a connection\nwith the Bloop build server."),(0,i.kt)("h2",{id:"sbt-build-server"},"sbt Build Server"),(0,i.kt)("p",null,"As of sbt 1.4.1, Metals has integrated support for the sbt BSP server. If you'd\nlike to use the sbt server as an alternative to Bloop (which is the default),\nthen at any time while in an sbt workspace you can choose to switch in multiple\nways."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note"),": that if you are unfamiliar with the features that the different build\nservers may offer, then simply stick with the default (Bloop), which has great\nintegrated stable support in Metals."),(0,i.kt)("h3",{id:"generating-a-bspsbtjson-file-if-one-doesnt-exist"},"Generating a ",(0,i.kt)("inlineCode",{parentName:"h3"},".bsp/sbt.json")," file if one doesn't exist"),(0,i.kt)("p",null,"More than likely if you're using sbt >= 1.4.1, you'll have already seen this file\nexist. However, if you're in a fresh workspace or it doesn't exist for some\nreason, you can execute a ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.generate-bsp-config")," command via the command\npalette, which will automatically detect that you're in a sbt workspace and\ngenerate the necessary file. After the file generation, Metals will then\nautomatically connect to sbt. From this point on, you'll be using sbt instead of\nBloop as your build server."),(0,i.kt)("h3",{id:"connect-to-sbt-build-server"},"Connect to sbt build server"),(0,i.kt)("p",null,"If your workspace already has a ",(0,i.kt)("inlineCode",{parentName:"p"},".bsp/sbt.json")," file, then you can switch from\nusing Bloop to sbt as a build server by executing a ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.bsp-switch")," command\nfrom the command palette.  This command will recognize the ",(0,i.kt)("inlineCode",{parentName:"p"},".bsp/sbt.json")," file,\nand then connect to the sbt build server. After the connection is made, you'll\nbe using sbt instead of Bloop as your build server."),(0,i.kt)("h3",{id:"switching-back-to-bloop"},"Switching back to Bloop"),(0,i.kt)("p",null,"If you'd like to switch back to using Bloop as your build server, there are\nmultiple ways for you to do this."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Using the same ",(0,i.kt)("inlineCode",{parentName:"li"},"metals.bsp-switch"),' command as up above, and select "bloop".'),(0,i.kt)("li",{parentName:"ol"},"Use the ",(0,i.kt)("inlineCode",{parentName:"li"},"metals.reset-choice"),' functionality and choose to reset the "Build\nServer Selection". Then follow this with the ',(0,i.kt)("inlineCode",{parentName:"li"},"metals.build-restart")," command\nwhich will disconnect you from the sbt build server, and then connect you\nback to the default Bloop server.")),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("p",null,"Before reporting an issue, check if your problem is solved with one of the\nfollowing tips."),(0,i.kt)("h3",{id:"waiting-for-lock-on-ivy2sbtivylock"},"Waiting for lock on .ivy2/.sbt.ivy.lock"),(0,i.kt)("p",null,"Metals run sbt in a separate process and this error happens where there are two\nsbt processes resolving dependencies at the same time."),(0,i.kt)("h3",{id:"not-valid-key-metalsenable"},"Not valid key: metalsEnable"),(0,i.kt)("p",null,"This error might indicate that you have an old version of ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt-metals")," installed\nin your project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[error] Not a valid key: metalsEnable (similar: scalafixEnabled)\n[error] metalsEnable\n[error]             ^\n")),(0,i.kt)("p",null,"Try to remove any usage of ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt-metals")," in your build."))}d.isMDXComponent=!0}}]);