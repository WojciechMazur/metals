"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[490],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,h=u["".concat(s,".").concat(d)]||u[d]||c[d]||l;return a?r.createElement(h,o(o({ref:t},m),{},{components:a})):r.createElement(h,o({ref:t},m))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4191:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),o=["components"],i={author:"\xd3lafur P\xe1ll Geirsson",title:"Metals v0.4.4 - Tin",authorURL:"https://twitter.com/olafurpg",authorImageURL:"https://avatars2.githubusercontent.com/u/1408093?s=460&v=4"},s=void 0,p={permalink:"/metals/blog/2019/02/01/tin",source:"@site/blog/2019-02-01-tin.md",title:"Metals v0.4.4 - Tin",description:"Metals is a language server for Scala that works with VS Code, Atom, Vim,",date:"2019-02-01T00:00:00.000Z",formattedDate:"February 1, 2019",tags:[],readingTime:1.965,hasTruncateMarker:!0,authors:[{name:"\xd3lafur P\xe1ll Geirsson",url:"https://twitter.com/olafurpg",imageURL:"https://avatars2.githubusercontent.com/u/1408093?s=460&v=4"}],frontMatter:{author:"\xd3lafur P\xe1ll Geirsson",title:"Metals v0.4.4 - Tin",authorURL:"https://twitter.com/olafurpg",authorImageURL:"https://avatars2.githubusercontent.com/u/1408093?s=460&v=4"},prevItem:{title:"Metals v0.5.0 - Mercury",permalink:"/metals/blog/2019/04/12/mercury"},nextItem:{title:"Metals v0.4.0 - Tin",permalink:"/metals/blog/2019/01/24/tin"}},m={authorsImageUrls:[void 0]},u=[{value:"Metals server",id:"metals-server",level:2},{value:"Improved code navigation",id:"improved-code-navigation",level:3},{value:"Empty source directories are no longer created",id:"empty-source-directories-are-no-longer-created",level:3},{value:"Multiple workspace folders",id:"multiple-workspace-folders",level:3},{value:"Avoid <code>metals.sbt</code> compile errors on old sbt versions",id:"avoid-metalssbt-compile-errors-on-old-sbt-versions",level:3},{value:"Visual Studio Code",id:"visual-studio-code",level:2},{value:"<code>JAVA_OPTS</code>",id:"java_opts",level:3},{value:"Sublime Text",id:"sublime-text",level:2},{value:"Emacs",id:"emacs",level:2},{value:"Merged PRs",id:"merged-prs",level:2}],c={toc:u},d="wrapper";function h(e){var t=e.components,a=(0,n.Z)(e,o);return(0,l.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Metals is a language server for Scala that works with VS Code, Atom, Vim,\nSublime Text and Emacs. Metals is developed at the\n",(0,l.kt)("a",{parentName:"p",href:"https://scala.epfl.ch/"},"Scala Center")," along with contributors from the\ncommunity."),(0,l.kt)("h2",{id:"metals-server"},"Metals server"),(0,l.kt)("p",null,"In this milestone we merged 5 PRs, full details:\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/scalameta/metals/milestone/5?closed=1"},"https://github.com/scalameta/metals/milestone/5?closed=1"),"."),(0,l.kt)("h3",{id:"improved-code-navigation"},"Improved code navigation"),(0,l.kt)("p",null,'Several "goto definition" and "find references" bugs have been fixed in this\nrelease. In particular, code navigation should work more reliably now for the\nfollowing language features'),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"for comprehensions with multiple assignments and guards"),(0,l.kt)("li",{parentName:"ul"},"eta-expanded methods and functions passed as values"),(0,l.kt)("li",{parentName:"ul"},"val patterns like ",(0,l.kt)("inlineCode",{parentName:"li"},"val (a, b) = ...")),(0,l.kt)("li",{parentName:"ul"},"named arguments in ",(0,l.kt)("inlineCode",{parentName:"li"},"apply")," methods"),(0,l.kt)("li",{parentName:"ul"},"repeated parameter types (varargs)")),(0,l.kt)("h3",{id:"empty-source-directories-are-no-longer-created"},"Empty source directories are no longer created"),(0,l.kt)("p",null,"Previously, Metals created all source directories like ",(0,l.kt)("inlineCode",{parentName:"p"},"src/main/java")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"src/main/scala-2.12")," even if they were unused. Now, Metals still creates these\ndirectories but removes them again after the file watcher has started. Big\nthanks to first-time contributor ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/mudsam"},"@mudsam")," for\nimplementing this fix!"),(0,l.kt)("h3",{id:"multiple-workspace-folders"},"Multiple workspace folders"),(0,l.kt)("p",null,"Metals now looks for ",(0,l.kt)("inlineCode",{parentName:"p"},".scalafmt.conf")," in all workspace folders instead of only\nthe workspace root."),(0,l.kt)("h3",{id:"avoid-metalssbt-compile-errors-on-old-sbt-versions"},"Avoid ",(0,l.kt)("inlineCode",{parentName:"h3"},"metals.sbt")," compile errors on old sbt versions"),(0,l.kt)("p",null,"The generated ",(0,l.kt)("inlineCode",{parentName:"p"},"metals.sbt")," file in ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.sbt/0.13/plugins/metals.sbt")," now compiles\non all versions of sbt 0.13.x even if Metals itself still only works with sbt\n0.13.17+."),(0,l.kt)("h2",{id:"visual-studio-code"},"Visual Studio Code"),(0,l.kt)("p",null,"The Metals extension was installed over 1000 times over the past week!"),(0,l.kt)("h3",{id:"java_opts"},(0,l.kt)("inlineCode",{parentName:"h3"},"JAVA_OPTS")),(0,l.kt)("p",null,"The Metals extension now respects the ",(0,l.kt)("inlineCode",{parentName:"p"},"JAVA_OPTS")," environment variable the same\nit does the ",(0,l.kt)("inlineCode",{parentName:"p"},".jvmopts")," file. For example, set ",(0,l.kt)("inlineCode",{parentName:"p"},"JAVA_OPTS")," to\n",(0,l.kt)("inlineCode",{parentName:"p"},"-Dhttps.proxyHost=\u2026 -Dhttps.proxyPort=\u2026")," to configure HTTP proxies. It's\nrecommended to start VS Code with the ",(0,l.kt)("inlineCode",{parentName:"p"},"code")," binary from the terminal to ensure\nenvironment variables propagate correctly."),(0,l.kt)("h2",{id:"sublime-text"},"Sublime Text"),(0,l.kt)("p",null,"There's a WIP pull request\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/tomv564/LSP/pull/501"},"tom654/LSP#501")," adding support for\nfuzzy symbol search (",(0,l.kt)("inlineCode",{parentName:"p"},"workspace/symbol"),"). Please upvote with \ud83d\udc4d if you'd like to\nuse this feature!"),(0,l.kt)("h2",{id:"emacs"},"Emacs"),(0,l.kt)("p",null,"There is a new Gitter channel\n",(0,l.kt)("a",{parentName:"p",href:"https://gitter.im/rossabaker/lsp-scala"},"rossabaker/lsp-scala")," for Emacs and\nMetals users."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"lsp-scala")," package is now published to MELPA\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/melpa/melpa/pull/5868"},"melpa/melpa#5868"),"."),(0,l.kt)("h2",{id:"merged-prs"},"Merged PRs"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Upgrade to Bloop v1.2.5 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals/pull/513"},"#","513"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/olafurpg"},"olafurpg"),")"),(0,l.kt)("li",{parentName:"ul"},"Respect workspace folders for Scalafmt formatting, fixes ","#","509.\n",(0,l.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals/pull/512"},"#","512"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/olafurpg"},"olafurpg"),")"),(0,l.kt)("li",{parentName:"ul"},"Fix navigation bug for var setters.\n",(0,l.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals/pull/511"},"#","511"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/olafurpg"},"olafurpg"),")"),(0,l.kt)("li",{parentName:"ul"},"Upgrade to Scalameta v4.1.3.\n",(0,l.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals/pull/510"},"#","510"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/olafurpg"},"olafurpg"),")"),(0,l.kt)("li",{parentName:"ul"},"Change behavior of FileWatcher so that it doesn't create non-existing source\ndirectories ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals/pull/506"},"#","506"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/mudsam"},"mudsam"),")"),(0,l.kt)("li",{parentName:"ul"},"Reference pluginCrossBuild via reflection to support older sbt 0.13.\n",(0,l.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals/pull/505"},"#","505"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/olafurpg"},"olafurpg"),")")))}h.isMDXComponent=!0}}]);