"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6583],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),u=s(n),m=a,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,i(i({ref:e},c),{},{components:n})):r.createElement(g,i({ref:e},c))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[u]="string"==typeof t?t:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3597:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"overview",title:"Build Tools Overview",sidebar_label:"Overview"},p=void 0,s={unversionedId:"build-tools/overview",id:"build-tools/overview",title:"Build Tools Overview",description:"Metals works with the following build tools with varying degrees of",source:"@site/target/docs/build-tools/overview.md",sourceDirName:"build-tools",slug:"/build-tools/overview",permalink:"/metals/docs/build-tools/overview",draft:!1,editUrl:"https://github.com/scalameta/metals/edit/main/docs/build-tools/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Build Tools Overview",sidebar_label:"Overview"},sidebar:"docs",previous:{title:"Scripts support",permalink:"/metals/docs/features/scripts"},next:{title:"Bloop",permalink:"/metals/docs/build-tools/bloop"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Goto library dependencies",id:"goto-library-dependencies",level:2},{value:"Find references",id:"find-references",level:2},{value:"Integrating a new build tool",id:"integrating-a-new-build-tool",level:2}],d={toc:u},m="wrapper";function g(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)(m,(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Metals works with the following build tools with varying degrees of\nfunctionality."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Build tool"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Installation"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Goto library dependencies"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Find references"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"sbt"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic via Bloop"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Maven"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic via Bloop"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Semi-automatic")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Gradle"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic via Bloop"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Mill"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic via Bloop"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Bloop"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Automatic"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Semi-automatic"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Semi-automatic")))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Automatic via Bloop"),": you can import the build directly from the language\nserver without the need for running custom steps in the terminal. The build is\nexported to ",(0,o.kt)("a",{parentName:"p",href:"https://scalacenter.github.io/bloop/"},"Bloop"),", a Scala build server\nthat provides fast incremental compilation."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Automatic"),": you can import the build directly from the language server\nwithout the need for running custom steps in the terminal. To use automatic\ninstallation start the Metals language server in the root directory of your\nbuild."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Manual"),": setting up Metals requires a few manual steps to generate\n",(0,o.kt)("a",{parentName:"p",href:"https://scalacenter.github.io/bloop"},"Bloop")," JSON files. In addition to normal\nBloop installation, Metals requires that the project sources are compiled with\nthe\n",(0,o.kt)("a",{parentName:"p",href:"https://scalameta.org/docs/semanticdb/guide.html#producing-semanticdb"},"semanticdb-scalac"),"\ncompiler plugin and ",(0,o.kt)("inlineCode",{parentName:"p"},"-Yrangepos")," option enabled."),(0,o.kt)("h2",{id:"goto-library-dependencies"},"Goto library dependencies"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Automatic"),': it is possible to navigate Scala+Java library dependencies using\n"Goto definition".'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Semi-automatic"),": navigation in library dependency sources works as long as\nthe\n",(0,o.kt)("a",{parentName:"p",href:"https://scalacenter.github.io/bloop/docs/configuration-format/"},"Bloop JSON files"),"\nare populated with ",(0,o.kt)("inlineCode",{parentName:"p"},"*-sources.jar"),"."),(0,o.kt)("h2",{id:"find-references"},"Find references"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Automatic"),": it is possible to find all references to a symbol in the project."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Semi-automatic"),": it is possible to 'Find symbol references' as soon the\nSemanticDB compiler plugin is manually enabled in the build, check separate\nbuild tool pages for details."),(0,o.kt)("h2",{id:"integrating-a-new-build-tool"},"Integrating a new build tool"),(0,o.kt)("p",null,"Metals works with any build tool that supports the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/scalacenter/bsp/blob/master/docs/bsp.md"},"Build Server Protocol"),".\nFor more information, see the\n",(0,o.kt)("a",{parentName:"p",href:"/metals/docs/integrations/new-build-tool"},"guide to integrate new build tools"),"."))}g.isMDXComponent=!0}}]);